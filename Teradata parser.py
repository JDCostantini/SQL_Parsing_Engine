{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import re"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "def tables_in_query(sql_str):\n",
    "\n",
    "    # remove the /* */ comments\n",
    "    q = re.sub(r\"/\\*[^*]*\\*+(?:[^*/][^*]*\\*+)*/\", \"\", sql_str)\n",
    "\n",
    "    # remove whole line -- and # comments\n",
    "    lines = [line for line in q.splitlines() if not re.match(\"^\\s*(--|#)\", line)]\n",
    "\n",
    "    # remove trailing -- and # comments\n",
    "    q = \" \".join([re.split(\"--|#\", line)[0] for line in lines])\n",
    "\n",
    "    # add space between commas if not space existis \n",
    "    q = re.sub(r'[,]', r', ', q)\n",
    "    \n",
    "    # split on blanks, parens and semicolons\n",
    "    tokens = re.split(r\"[\\s)(;]+\", q)\n",
    "\n",
    "    # scan the tokens. if we see a FROM or JOIN, we set the get_next\n",
    "    # flag, and grab the next one (unless it's SELECT).\n",
    "\n",
    "    result = set()\n",
    "    get_next = False\n",
    "    from_ident = False\n",
    "    for tok in tokens:\n",
    "        comma = ',' in tok\n",
    "        if (tok.lower() in ['from']):\n",
    "            from_ident = True\n",
    "        elif (tok.lower() in ['select','order','where','group','having','limit', 'in']):\n",
    "            from_ident= False\n",
    "#         print(tok,'-', get_next,'-', comma, '-', from_ident)\n",
    "        if (get_next & from_ident):\n",
    "            if tok.lower() not in [\"\", \"select\"]:\n",
    "#                 print('tok to be added', tok)\n",
    "                tok =re.sub(r'[,]', r'', tok)\n",
    "#                 print('tok to be added', tok)\n",
    "                result.add(tok)\n",
    "        if comma:\n",
    "            get_next = True\n",
    "        else:\n",
    "            get_next = tok.lower() in [\"from\", \"join\"]\n",
    "#     print(result)\n",
    "    return result"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "column = ['user', 'sql_query']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "list_of_lists = [\n",
    "    ['user1', 'CREATE TABLE EDWARD_FIX_WGS_STAR AS SELECT group_id ,MBRSHP_SOR_CD ,legal_entity as LEGAL_ENTITY2 ,line_of_business AS LINE_OF_BUSINESS2 ,mbu AS MBU2 ,funding as funding2 ,MAX(service_date) AS max_date FROM final2 WHERE LEGAL_ENTITY NOT IN (‘UNK’,‘’) AND MBU NOT IN (‘UNK’,‘’) AND substr(MBU,1,2) NOT IN (‘LG’) AND mbrshp_sor_cd IN (‘808’,‘815’,‘877’)   /*  WGS STAR  QCARE_NOTREADY  */ GROUP BY 1,2,3,4,5 ORDER BY 1,2,7 DESC'],\n",
    "    ['user2', 'SELECT * FROM table.table1 LEFT JOIN table2;'],\n",
    "    ['user3', 'SELECT ID FROM Customers INNER JOIN Orders'],\n",
    "    ['','select K.a,K.b from (select H.b from H), I, J, K join L on order by 1, 2;'],\n",
    "]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "sql_query_dataframe = pd.DataFrame(list_of_lists, columns=column)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "sql_query_dataframe = pd.read_csv('sql_queries.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "sql_query_dataframe['tables']= ''"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sql_query</th>\n",
       "      <th>tables</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>CREATE TABLE diag_cd_dom AS SELECT * FROM CONN...</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>CREATE TABLE diag_cd_dom AS SELECT * FROM CONN...</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>CREATE TABLE deny_dom AS SELECT * FROM CONNECT...</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>CREATE TABLE CPT_dom AS SELECT * FROM CONNECTI...</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>CREATE TABLE Drug_name AS SELECT * FROM CONNEC...</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                           sql_query tables\n",
       "0  CREATE TABLE diag_cd_dom AS SELECT * FROM CONN...       \n",
       "1  CREATE TABLE diag_cd_dom AS SELECT * FROM CONN...       \n",
       "2  CREATE TABLE deny_dom AS SELECT * FROM CONNECT...       \n",
       "3  CREATE TABLE CPT_dom AS SELECT * FROM CONNECTI...       \n",
       "4  CREATE TABLE Drug_name AS SELECT * FROM CONNEC...       "
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sql_query_dataframe.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(110, 2)"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sql_query_dataframe.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "# sql_query_dataframe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "for index, row in sql_query_dataframe.iterrows():\n",
    "    row['tables']= tables_in_query(row.sql_query)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sql_query</th>\n",
       "      <th>tables</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>CREATE TABLE diag_cd_dom AS SELECT * FROM CONN...</td>\n",
       "      <td>{EDW_ALLPHI.DIAG, CONNECTION}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>CREATE TABLE diag_cd_dom AS SELECT * FROM CONN...</td>\n",
       "      <td>{EDW_ALLPHI.DIAG, CONNECTION}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>CREATE TABLE deny_dom AS SELECT * FROM CONNECT...</td>\n",
       "      <td>{CONNECTION, EDW_ALLPHI.SRC_SRVC_DNL_RSN_CD}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>CREATE TABLE CPT_dom AS SELECT * FROM CONNECTI...</td>\n",
       "      <td>{edw_allphi.hlth_srvc, CONNECTION}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>CREATE TABLE Drug_name AS SELECT * FROM CONNEC...</td>\n",
       "      <td>{EDW_ALLPHI.NDC, CONNECTION}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>CREATE TABLE Pharmacy_name AS SELECT * FROM CO...</td>\n",
       "      <td>{CONNECTION, EDW_ALLPHI.PROV_ADRS}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>CREATE TABLE Mike.Qcare_PROV_name AS SELECT * ...</td>\n",
       "      <td>{CONNECTION}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>CREATE TABLE EDWARDa AS \\nSELECT * FROM CONNEC...</td>\n",
       "      <td>{EDW_ALLPHI.CLM_PROV, '~NA', EDW_ALLPHI.CLM_PA...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>CREATE TABLE EDWARDb AS \\nSELECT * FROM CONNEC...</td>\n",
       "      <td>{'~NA', EDW2_ALLPHI.CLM_line_PROV, EDW_ALLPHI....</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>DISP_CD\"</td>\n",
       "      <td>{}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>SELECT\\nZ.CLM_ADJSTMNT_KEY, \\n/*fix facility c...</td>\n",
       "      <td>{ad33926.VT_temp, EDW_ALLPHI.clm_LINE_diag, ED...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>create table Test as \\n\\t  select * from  conn...</td>\n",
       "      <td>{connection, caks1}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>SELECT\\nZ.CLM_ADJSTMNT_KEY, \\n/*fix facility c...</td>\n",
       "      <td>{ad33926.VT_temp, EDW2_ALLPHI.clm, EDW2_ALLPHI...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>create table Test2 as \\n\\t  select * from  con...</td>\n",
       "      <td>{connection, caks2}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>CREATE TABLE EDWARD_ICD9_PROC1 AS \\nSELECT * F...</td>\n",
       "      <td>{EDW_ALLPHI.mdm_ppltn_xwalk, CONNECTION, EDW_A...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>CREATE TABLE EDWARD_ICD9_PROC2 AS \\nSELECT * F...</td>\n",
       "      <td>{EDW_ALLPHI.mdm_ppltn_xwalk, CONNECTION, EDW_A...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>CREATE TABLE EDWARD_ICD_PROC_DESC1 AS \\nSELECT...</td>\n",
       "      <td>{EDW_ALLPHI.mdm_ppltn_xwalk, CONNECTION, EDW_A...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>CREATE TABLE EDWARD_ICD_PROC_DESC2 AS \\nSELECT...</td>\n",
       "      <td>{EDW_ALLPHI.mdm_ppltn_xwalk, EDW2_ALLPHI.CLM_I...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>CREATE TABLE WORK.PRSCB_NAME_FIX AS \\n   SELEC...</td>\n",
       "      <td>{WORK.MEMBER_CLAIMS_EDWARD}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>CREATE TABLE member_claims_edward_EG AS \\nSELE...</td>\n",
       "      <td>{member_claims_edward1}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>CREATE TABLE member_claims_edward_EDW AS \\nSEL...</td>\n",
       "      <td>{EDW_ALLPHI.mdm_ppltn_xwalk, EDW_ALLPHI.CLM_LI...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>create table detail_claim as\\n     select \\nhc...</td>\n",
       "      <td>{all}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>create table  acheck as\\n     select distinct ...</td>\n",
       "      <td>{EDWARD}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>create table detail_prof as\\n     select \\nhc_...</td>\n",
       "      <td>{all}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>create table detail_cpt as\\nselect distinct\\nm...</td>\n",
       "      <td>{all_PROC}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>create table detail_diags as\\nselect distinct\\...</td>\n",
       "      <td>{all_diag_desc}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>create table detail_DENY as\\nselect distinct\\n...</td>\n",
       "      <td>{all}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>create table detail_prof as\\n     select \\nhc_...</td>\n",
       "      <td>{all}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>create table detail_cpt as\\nselect distinct\\nm...</td>\n",
       "      <td>{all_PROC}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>create table detail_diags as\\nselect distinct\\...</td>\n",
       "      <td>{all_diag_desc}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>create table testt_NDC as \\nselect \\nNATIONAL_...</td>\n",
       "      <td>{final}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>create table Legal_entity as\\nselect distinct\\...</td>\n",
       "      <td>{FINAL}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>create table ASO_list as\\nselect \\n\\nGROUP_ID,...</td>\n",
       "      <td>{FINAL}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>create table FI_list as\\nselect\\nLEGAL_ENTITY,...</td>\n",
       "      <td>{FINAL}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84</th>\n",
       "      <td>CREATE TABLE ADW_4 AS \\nSELECT * FROM CONNECTI...</td>\n",
       "      <td>{X.SUBGROUP_ID, AHD.NATL_DRUG_CD, ADW_4.MBR_AD...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>85</th>\n",
       "      <td>CREATE TABLE ADW_4 AS \\nSELECT * FROM CONNECTI...</td>\n",
       "      <td>{X.SUBGROUP_ID, AHD.NATL_DRUG_CD, ADW_4.MBR_AD...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <td>CREATE TABLE ADW_2005 AS \\nSELECT * FROM CONNE...</td>\n",
       "      <td>{X.SUBGROUP_ID, AHD.NATL_DRUG_CD, ADW_4.MBR_AD...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87</th>\n",
       "      <td>CREATE TABLE ADW_2004 AS \\nSELECT * FROM CONNE...</td>\n",
       "      <td>{X.SUBGROUP_ID, AHD.NATL_DRUG_CD, ADW_4.MBR_AD...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>CREATE TABLE ADW_2003 AS \\nSELECT * FROM CONNE...</td>\n",
       "      <td>{X.SUBGROUP_ID, AHD.NATL_DRUG_CD, ADW_4.MBR_AD...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>CREATE TABLE ADW_2002 AS \\nSELECT * FROM CONNE...</td>\n",
       "      <td>{X.SUBGROUP_ID, AHD.NATL_DRUG_CD, ADW_4.MBR_AD...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>CREATE TABLE ADW_2001 AS \\nSELECT * FROM CONNE...</td>\n",
       "      <td>{X.SUBGROUP_ID, AHD.NATL_DRUG_CD, ADW_4.MBR_AD...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>CREATE TABLE ADW_2000 AS \\nSELECT * FROM CONNE...</td>\n",
       "      <td>{X.SUBGROUP_ID, AHD.NATL_DRUG_CD, ADW_4.MBR_AD...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>CREATE TABLE ADW_1995 AS \\nSELECT * FROM CONNE...</td>\n",
       "      <td>{AHD.NATL_DRUG_CD, ADW_4.MBR_ADDR, '01850', 'R...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93</th>\n",
       "      <td>create table EIN_pkg as\\nselect distinct\\npkg_...</td>\n",
       "      <td>{all}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94</th>\n",
       "      <td>select distinct mbr_src_sys_key\\nfrom all\\nwhe...</td>\n",
       "      <td>{all}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>CREATE TABLE test AS  \\nselect \\nlegal_entity,...</td>\n",
       "      <td>{final}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>CREATE TABLE FINAL_ein AS \\nSELECT \\na.mbr_src...</td>\n",
       "      <td>{'042117', 'G0275', final, 'G0360', 'G0365', '...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>create table EIN_missing as\\nselect distinct\\n...</td>\n",
       "      <td>{FINAL_EIN}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>create table mbu_missing as\\nselect distinct\\n...</td>\n",
       "      <td>{FINAL_EIN}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>(select distinct sum(paid_amount) as paida for...</td>\n",
       "      <td>{FINAL_EIN, final}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>(select distinct legal_entity,'a', sum(paid_am...</td>\n",
       "      <td>{FINAL_EIN, final}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>CREATE TABLE MentalH_IND (COMPRESS=YES) AS SEL...</td>\n",
       "      <td>{EDW_NOHAPHI.BNFT_PKG, 'G1525', EDW_NOHAPHI.MB...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102</th>\n",
       "      <td>CREATE MULTISET VOLATILE TABLE zru1057.SUB AS ...</td>\n",
       "      <td>{'815', '824', EDW_ALLPHI.MBR_ADRS, EDW_ALLPHI...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103</th>\n",
       "      <td>CREATE MULTISET VOLATILE TABLE zru1057.MBR AS ...</td>\n",
       "      <td>{'815', '824', EDW_ALLPHI.MBR_ADRS, EDW_ALLPHI...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>104</th>\n",
       "      <td>CREATE MULTISET VOLATILE TABLE zru1057.MPE AS ...</td>\n",
       "      <td>{EDW_NOHAPHI.BNFT_PKG, EDW_ALLPHI.FNCL_MBU_CF,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>105</th>\n",
       "      <td>create multiset volatile table zru1057.CLM\\nas...</td>\n",
       "      <td>{EDW_ALLPHI.CLM_LINE, zru1057.CLM, EDW_ALLPHI....</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>106</th>\n",
       "      <td>CREATE MULTISET VOLATILE TABLE zru1057.ICD_D_O...</td>\n",
       "      <td>{EDW_ALLPHI.CLM_LINE_DIAG, zru1057.CLM}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>107</th>\n",
       "      <td>CREATE MULTISET VOLATILE TABLE zru1057.ICD_PRO...</td>\n",
       "      <td>{EDW_ALLPHI.CLM_ICD_PROC, zru1057.CLM}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>108</th>\n",
       "      <td>CREATE MULTISET VOLATILE TABLE zru1057.ICD_PRO...</td>\n",
       "      <td>{EDW_ALLPHI.CLM_ICD_PROC, zru1057.CLM}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109</th>\n",
       "      <td>CREATE MULTISET VOLATILE TABLE zru1057.FINAL A...</td>\n",
       "      <td>{EDW_ALLPHI.SPCLTY_CD, EDW_ALLPHI.PDC_CMNCTN, ...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>110 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                             sql_query  \\\n",
       "0    CREATE TABLE diag_cd_dom AS SELECT * FROM CONN...   \n",
       "1    CREATE TABLE diag_cd_dom AS SELECT * FROM CONN...   \n",
       "2    CREATE TABLE deny_dom AS SELECT * FROM CONNECT...   \n",
       "3    CREATE TABLE CPT_dom AS SELECT * FROM CONNECTI...   \n",
       "4    CREATE TABLE Drug_name AS SELECT * FROM CONNEC...   \n",
       "5    CREATE TABLE Pharmacy_name AS SELECT * FROM CO...   \n",
       "6    CREATE TABLE Mike.Qcare_PROV_name AS SELECT * ...   \n",
       "7    CREATE TABLE EDWARDa AS \\nSELECT * FROM CONNEC...   \n",
       "8    CREATE TABLE EDWARDb AS \\nSELECT * FROM CONNEC...   \n",
       "9                                             DISP_CD\"   \n",
       "10   SELECT\\nZ.CLM_ADJSTMNT_KEY, \\n/*fix facility c...   \n",
       "11   create table Test as \\n\\t  select * from  conn...   \n",
       "12   SELECT\\nZ.CLM_ADJSTMNT_KEY, \\n/*fix facility c...   \n",
       "13   create table Test2 as \\n\\t  select * from  con...   \n",
       "14   CREATE TABLE EDWARD_ICD9_PROC1 AS \\nSELECT * F...   \n",
       "15   CREATE TABLE EDWARD_ICD9_PROC2 AS \\nSELECT * F...   \n",
       "16   CREATE TABLE EDWARD_ICD_PROC_DESC1 AS \\nSELECT...   \n",
       "17   CREATE TABLE EDWARD_ICD_PROC_DESC2 AS \\nSELECT...   \n",
       "18   CREATE TABLE WORK.PRSCB_NAME_FIX AS \\n   SELEC...   \n",
       "19   CREATE TABLE member_claims_edward_EG AS \\nSELE...   \n",
       "20   CREATE TABLE member_claims_edward_EDW AS \\nSEL...   \n",
       "21   create table detail_claim as\\n     select \\nhc...   \n",
       "22   create table  acheck as\\n     select distinct ...   \n",
       "23   create table detail_prof as\\n     select \\nhc_...   \n",
       "24   create table detail_cpt as\\nselect distinct\\nm...   \n",
       "25   create table detail_diags as\\nselect distinct\\...   \n",
       "26   create table detail_DENY as\\nselect distinct\\n...   \n",
       "27   create table detail_prof as\\n     select \\nhc_...   \n",
       "28   create table detail_cpt as\\nselect distinct\\nm...   \n",
       "29   create table detail_diags as\\nselect distinct\\...   \n",
       "..                                                 ...   \n",
       "80   create table testt_NDC as \\nselect \\nNATIONAL_...   \n",
       "81   create table Legal_entity as\\nselect distinct\\...   \n",
       "82   create table ASO_list as\\nselect \\n\\nGROUP_ID,...   \n",
       "83   create table FI_list as\\nselect\\nLEGAL_ENTITY,...   \n",
       "84   CREATE TABLE ADW_4 AS \\nSELECT * FROM CONNECTI...   \n",
       "85   CREATE TABLE ADW_4 AS \\nSELECT * FROM CONNECTI...   \n",
       "86   CREATE TABLE ADW_2005 AS \\nSELECT * FROM CONNE...   \n",
       "87   CREATE TABLE ADW_2004 AS \\nSELECT * FROM CONNE...   \n",
       "88   CREATE TABLE ADW_2003 AS \\nSELECT * FROM CONNE...   \n",
       "89   CREATE TABLE ADW_2002 AS \\nSELECT * FROM CONNE...   \n",
       "90   CREATE TABLE ADW_2001 AS \\nSELECT * FROM CONNE...   \n",
       "91   CREATE TABLE ADW_2000 AS \\nSELECT * FROM CONNE...   \n",
       "92   CREATE TABLE ADW_1995 AS \\nSELECT * FROM CONNE...   \n",
       "93   create table EIN_pkg as\\nselect distinct\\npkg_...   \n",
       "94   select distinct mbr_src_sys_key\\nfrom all\\nwhe...   \n",
       "95   CREATE TABLE test AS  \\nselect \\nlegal_entity,...   \n",
       "96   CREATE TABLE FINAL_ein AS \\nSELECT \\na.mbr_src...   \n",
       "97   create table EIN_missing as\\nselect distinct\\n...   \n",
       "98   create table mbu_missing as\\nselect distinct\\n...   \n",
       "99   (select distinct sum(paid_amount) as paida for...   \n",
       "100  (select distinct legal_entity,'a', sum(paid_am...   \n",
       "101  CREATE TABLE MentalH_IND (COMPRESS=YES) AS SEL...   \n",
       "102  CREATE MULTISET VOLATILE TABLE zru1057.SUB AS ...   \n",
       "103  CREATE MULTISET VOLATILE TABLE zru1057.MBR AS ...   \n",
       "104  CREATE MULTISET VOLATILE TABLE zru1057.MPE AS ...   \n",
       "105  create multiset volatile table zru1057.CLM\\nas...   \n",
       "106  CREATE MULTISET VOLATILE TABLE zru1057.ICD_D_O...   \n",
       "107  CREATE MULTISET VOLATILE TABLE zru1057.ICD_PRO...   \n",
       "108  CREATE MULTISET VOLATILE TABLE zru1057.ICD_PRO...   \n",
       "109  CREATE MULTISET VOLATILE TABLE zru1057.FINAL A...   \n",
       "\n",
       "                                                tables  \n",
       "0                        {EDW_ALLPHI.DIAG, CONNECTION}  \n",
       "1                        {EDW_ALLPHI.DIAG, CONNECTION}  \n",
       "2         {CONNECTION, EDW_ALLPHI.SRC_SRVC_DNL_RSN_CD}  \n",
       "3                   {edw_allphi.hlth_srvc, CONNECTION}  \n",
       "4                         {EDW_ALLPHI.NDC, CONNECTION}  \n",
       "5                   {CONNECTION, EDW_ALLPHI.PROV_ADRS}  \n",
       "6                                         {CONNECTION}  \n",
       "7    {EDW_ALLPHI.CLM_PROV, '~NA', EDW_ALLPHI.CLM_PA...  \n",
       "8    {'~NA', EDW2_ALLPHI.CLM_line_PROV, EDW_ALLPHI....  \n",
       "9                                                   {}  \n",
       "10   {ad33926.VT_temp, EDW_ALLPHI.clm_LINE_diag, ED...  \n",
       "11                                 {connection, caks1}  \n",
       "12   {ad33926.VT_temp, EDW2_ALLPHI.clm, EDW2_ALLPHI...  \n",
       "13                                 {connection, caks2}  \n",
       "14   {EDW_ALLPHI.mdm_ppltn_xwalk, CONNECTION, EDW_A...  \n",
       "15   {EDW_ALLPHI.mdm_ppltn_xwalk, CONNECTION, EDW_A...  \n",
       "16   {EDW_ALLPHI.mdm_ppltn_xwalk, CONNECTION, EDW_A...  \n",
       "17   {EDW_ALLPHI.mdm_ppltn_xwalk, EDW2_ALLPHI.CLM_I...  \n",
       "18                         {WORK.MEMBER_CLAIMS_EDWARD}  \n",
       "19                             {member_claims_edward1}  \n",
       "20   {EDW_ALLPHI.mdm_ppltn_xwalk, EDW_ALLPHI.CLM_LI...  \n",
       "21                                               {all}  \n",
       "22                                            {EDWARD}  \n",
       "23                                               {all}  \n",
       "24                                          {all_PROC}  \n",
       "25                                     {all_diag_desc}  \n",
       "26                                               {all}  \n",
       "27                                               {all}  \n",
       "28                                          {all_PROC}  \n",
       "29                                     {all_diag_desc}  \n",
       "..                                                 ...  \n",
       "80                                             {final}  \n",
       "81                                             {FINAL}  \n",
       "82                                             {FINAL}  \n",
       "83                                             {FINAL}  \n",
       "84   {X.SUBGROUP_ID, AHD.NATL_DRUG_CD, ADW_4.MBR_AD...  \n",
       "85   {X.SUBGROUP_ID, AHD.NATL_DRUG_CD, ADW_4.MBR_AD...  \n",
       "86   {X.SUBGROUP_ID, AHD.NATL_DRUG_CD, ADW_4.MBR_AD...  \n",
       "87   {X.SUBGROUP_ID, AHD.NATL_DRUG_CD, ADW_4.MBR_AD...  \n",
       "88   {X.SUBGROUP_ID, AHD.NATL_DRUG_CD, ADW_4.MBR_AD...  \n",
       "89   {X.SUBGROUP_ID, AHD.NATL_DRUG_CD, ADW_4.MBR_AD...  \n",
       "90   {X.SUBGROUP_ID, AHD.NATL_DRUG_CD, ADW_4.MBR_AD...  \n",
       "91   {X.SUBGROUP_ID, AHD.NATL_DRUG_CD, ADW_4.MBR_AD...  \n",
       "92   {AHD.NATL_DRUG_CD, ADW_4.MBR_ADDR, '01850', 'R...  \n",
       "93                                               {all}  \n",
       "94                                               {all}  \n",
       "95                                             {final}  \n",
       "96   {'042117', 'G0275', final, 'G0360', 'G0365', '...  \n",
       "97                                         {FINAL_EIN}  \n",
       "98                                         {FINAL_EIN}  \n",
       "99                                  {FINAL_EIN, final}  \n",
       "100                                 {FINAL_EIN, final}  \n",
       "101  {EDW_NOHAPHI.BNFT_PKG, 'G1525', EDW_NOHAPHI.MB...  \n",
       "102  {'815', '824', EDW_ALLPHI.MBR_ADRS, EDW_ALLPHI...  \n",
       "103  {'815', '824', EDW_ALLPHI.MBR_ADRS, EDW_ALLPHI...  \n",
       "104  {EDW_NOHAPHI.BNFT_PKG, EDW_ALLPHI.FNCL_MBU_CF,...  \n",
       "105  {EDW_ALLPHI.CLM_LINE, zru1057.CLM, EDW_ALLPHI....  \n",
       "106            {EDW_ALLPHI.CLM_LINE_DIAG, zru1057.CLM}  \n",
       "107             {EDW_ALLPHI.CLM_ICD_PROC, zru1057.CLM}  \n",
       "108             {EDW_ALLPHI.CLM_ICD_PROC, zru1057.CLM}  \n",
       "109  {EDW_ALLPHI.SPCLTY_CD, EDW_ALLPHI.PDC_CMNCTN, ...  \n",
       "\n",
       "[110 rows x 2 columns]"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sql_query_dataframe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "sql_query_dataframe.to_csv('results.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "# tables_in_query('SELECT * from Evalulation e JOIN Value v ON e.CaseNum = v.CaseNum \\\n",
    "#     AND e.FileNum = v.FileNum AND e.ActivityNum = v.ActivityNum')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 624,
   "metadata": {},
   "outputs": [],
   "source": [
    "# tables_in_query('CREATE TABLE diag_cd_dom AS SELECT * FROM CONNECTION TO TERADATA \\\n",
    "#   (select Z.diag_cd                as prim_diag_cd1, \\\n",
    "#           Z.diag_cd                as diag_2, \\\n",
    "#  Z.diag_cd                as diag_3, \\\n",
    "#   Z.diag_cd                as diag_4, \\\n",
    "#   Z.diag_cd                as diag_5, \\\n",
    "#   Z.diag_cd                as diag_6, \\\n",
    "#                 Z.diag_cd                as diag_7, \\\n",
    "#   Z.diag_cd                as diag_8, \\\n",
    "#   Z.diag_cd                as diag_9, \\\n",
    "#           z.ICD_VRSN_CD            as ICD_VRSN_CD, \\\n",
    "#  UPPER(Z.icd_full_desc)  as diag_cd_desc \\\n",
    "#    from  EDW_ALLPHI.DIAG Z \\\n",
    "# /*   where z.ICD_VRSN_CD=9*/ \\\n",
    "#   group by 1,2,3,4,5,6,7,8,9,10,11 \\\n",
    "#   order by 1,10);')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 561,
   "metadata": {},
   "outputs": [],
   "source": [
    "# tables_in_query('select K.a,K.b from (select H.b from H), I,J,K join L on order by 1, 2;')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 562,
   "metadata": {},
   "outputs": [],
   "source": [
    "# tables_in_query('SELECT pid, cid, pname, name1, name2 FROM customer1 c1, product p')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 563,
   "metadata": {},
   "outputs": [],
   "source": [
    "# tables_in_query('CREATE TABLE EDWARD_FIX_WGS_STAR AS SELECT group_id ,MBRSHP_SOR_CD ,legal_entity as LEGAL_ENTITY2 ,line_of_business AS LINE_OF_BUSINESS2 ,mbu AS MBU2 ,funding as funding2 ,MAX(service_date) AS max_date FROM final2 WHERE LEGAL_ENTITY NOT IN (‘UNK’,‘’) AND MBU NOT IN (‘UNK’,‘’) AND substr(MBU,1,2) NOT IN (‘LG’) AND mbrshp_sor_cd IN (‘808’,‘815’,‘877’)   /*  WGS STAR  QCARE_NOTREADY  */ GROUP BY 1,2,3,4,5 ORDER BY 1,2,7 DESC;')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
